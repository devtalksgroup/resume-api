services:
  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_PORT=${APP_PORT:-3000}
    container_name: resume-api-app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-3000}:${APP_PORT:-3000}'
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${postgres:-postgres}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DB_USERNAME=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres123}
      - DB_NAME=${POSTGRES_DB:-resume_api}
    depends_on:
      - postgres
    networks:
      - resume-api-network

  postgres:
    image: postgres:17.5-alpine
    container_name: resume-api-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-resume_api}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - resume-api-network
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: resume-api-pgadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-False}
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - resume-api-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  resume-api-network:
    driver: bridge
